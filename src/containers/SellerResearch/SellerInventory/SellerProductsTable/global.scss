@import '../../../../styles/tableReset';

#sellerInventoryTable {
  /* Nested child tale */

  #sellerProductsTable {
    // header section
    .rs-table-row-header {
      border-radius: 0 !important;
      border: 0 !important;
      background: $light_gray_background;

      // column heder cell
      .rs-table-cell-content {
        display: flex !important;
        align-items: center !important;
        font-size: 12px !important;
        color: $grey_6 !important;
        background: $light_gray_background !important;
        border: 0 !important;
        font-weight: 500 !important;
        padding: 3px 10px !important;
      }

      // first column special styles
      .rs-table-cell-first {
        .rs-table-cell-content {
          padding: 0 !important;
        }
      }
    }

    // body section
    .rs-table-body-row-wrapper {
      background: $light_gray_background !important;

      .rs-table-body-wheel-area {
        background: $light_gray_background;

        .rs-table-row {
          // height: 190px !important; // should be rowheight - 10px i gap between rows is needed

          // remove residue from parent if any
          // add border-top on each row and remove other border's
          border: 0 !important;
          border-top: 1px solid $grey_3 !important;

          /* ============== ZEBRA PATTERN  =============== */
          &:nth-child(2n) {
            background: $light_gray_background !important;

            .rs-table-cell-content {
              background: $light_gray_background !important;
              padding: 3px 10px !important;

              // remove residue from parent (if any)
              border: 0 !important;
            }
          }

          &:nth-child(2n + 1) {
            background: $grey_1 !important;

            .rs-table-cell-content {
              background: $grey_1 !important;
              padding: 3px 10px !important;

              // remove residue from parent (if any)
              border: 0 !important;
            }
          }

          /* ============== ROW HOVER  =============== */
          &:hover {
            background: $grey_2 !important;

            .rs-table-cell-content {
              background: $grey_2 !important;
            }
          }

          /* ============== FIRST CELL (TREAT SPECIAL)  =============== */
          .rs-table-cell-first {
            .rs-table-cell-content {
              padding: 0 !important;

              // remove residue from parent (if any)
              border: 0 !important;
            }
          }

          /* ============== LAST CELL (TREAT SPECIAL)  =============== */
          .rs-table-cell-last {
            .rs-table-cell-content {
              padding: 0 !important;

              // remove residue from parent (if any)
              border: 0 !important;
            }
          }
        }
      }

      // Loader wrapper
      .rs-table-loader-wrapper {
        background: $light_gray_background !important;

        .rs-table-loader {
          background: $light_gray_background !important;
        }
      }
    }

    // scrollbar
    div[role='scrollbar'] {
      bottom: 60px !important;
      background: $grey_3;
      border-radius: 4px;
      position: fixed !important;
      opacity: 0;
      height: 10px;
      max-width: 90vw !important;
      margin-left: auto !important;

      &.rs-table-scrollbar.rs-table-scrollbar-pressed {
        opacity: 1 !important;
      }

      &:hover {
        opacity: 1;
      }

      > .rs-table-scrollbar-handle {
        background-color: $grey_6 !important;
        opacity: 1 !important;
        height: 8px;
        max-width: 100% !important;
      }
    }
  }
}

.iconButtonResetGlobal {
  i.chevron.down.icon {
    font-size: 10px !important;
    margin-top: 4px;
  }
}
